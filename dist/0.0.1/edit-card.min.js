/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(7);


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(3);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _Container = __webpack_require__(4);

	var _Container2 = _interopRequireDefault(_Container);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	window.ProtoGraph = window.ProtoGraph || {};
	window.ProtoGraph.Card = window.ProtoGraph.Card || {};

	ProtoGraph.Card.toTimeline = function () {
	  this.cardType = 'TimelineCard';
	};

	ProtoGraph.Card.toTimeline.prototype.init = function (options) {
	  this.options = options;
	};

	ProtoGraph.Card.toTimeline.prototype.getData = function (data) {
	  return this.containerInstance.exportData();
	};

	ProtoGraph.Card.toTimeline.prototype.renderCol7 = function (data) {
	  this.mode = 'col7';
	  _reactDom2.default.unmountComponentAtNode(this.options.selector);
	  this.render();
	};

	ProtoGraph.Card.toTimeline.prototype.renderCol4 = function (data) {
	  this.mode = 'col4';
	  _reactDom2.default.unmountComponentAtNode(this.options.selector);
	  this.render();
	};
	ProtoGraph.Card.toTimeline.prototype.render = function () {
	  var _this = this;

	  _reactDom2.default.render(_react2.default.createElement(_Container2.default, {
	    dataURL: this.options.data_url,
	    siteConfigURL: this.options.site_config_url,
	    siteConfigs: this.options.site_configs,
	    mode: this.mode,
	    ref: function ref(e) {
	      _this.containerInstance = _this.containerInstance || e;
	    } }), this.options.selector);
	};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

	module.exports = React;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

	module.exports = ReactDOM;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(3);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _axios = __webpack_require__(5);

	var _axios2 = _interopRequireDefault(_axios);

	var _dateformat = __webpack_require__(6);

	var _dateformat2 = _interopRequireDefault(_dateformat);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TimelineCard = function (_React$Component) {
	  _inherits(TimelineCard, _React$Component);

	  function TimelineCard(props) {
	    _classCallCheck(this, TimelineCard);

	    var _this = _possibleConstructorReturn(this, (TimelineCard.__proto__ || Object.getPrototypeOf(TimelineCard)).call(this, props));

	    var stateVar = {
	      fetchingData: true,
	      dataJSON: {
	        data: {},
	        mandatory_config: {}
	      },
	      optionalConfigJSON: {},
	      languageTexts: {},
	      siteConfigs: _this.props.siteConfigs,
	      ready: false,
	      curr: 1
	    };

	    if (_this.props.dataJSON) {
	      stateVar.fetchingData = false;
	      stateVar.dataJSON = _this.props.dataJSON;
	    }

	    if (_this.props.optionalConfigJSON) {
	      stateVar.optionalConfigJSON = _this.props.optionalConfigJSON;
	    }

	    if (_this.props.languageTexts) {
	      stateVar.languageTexts = _this.props.languageTexts;
	    }

	    _this.state = stateVar;
	    return _this;
	  }

	  _createClass(TimelineCard, [{
	    key: 'exportData',
	    value: function exportData() {
	      return document.getElementById('protograph_div').getBoundingClientRect();
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.optionalConfigJSON) {
	        this.setState({
	          optionalConfigJSON: nextProps.optionalConfigJSON
	        });
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      // get sample json data based on type i.e string or object
	      if (this.state.fetchingData) {
	        var items_to_fetch = [_axios2.default.get(this.props.dataURL)];

	        if (this.props.siteConfigURL) {
	          items_to_fetch.push(_axios2.default.get(this.props.siteConfigURL));
	        }
	        _axios2.default.all(items_to_fetch).then(_axios2.default.spread(function (card, site_configs) {
	          var stateVar = {
	            fetchingData: false,
	            dataJSON: {
	              data: card.data.data,
	              mandatory_config: card.data.mandatory_config
	            },
	            optionalConfigJSON: {},
	            siteConfigs: site_configs ? site_configs.data : _this2.state.siteConfigs
	          };

	          stateVar.dataJSON.mandatory_config.language = stateVar.siteConfigs.primary_language.toLowerCase();
	          stateVar.languageTexts = _this2.getLanguageTexts(stateVar.dataJSON.mandatory_config.language);

	          stateVar.optionalConfigJSON.start_button_color = stateVar.siteConfigs.house_colour;
	          stateVar.optionalConfigJSON.start_button_text_color = stateVar.siteConfigs.font_colour;
	          _this2.setState(stateVar);
	        }));
	      }
	    }
	  }, {
	    key: 'getLanguageTexts',
	    value: function getLanguageTexts(languageConfig) {
	      var language = languageConfig ? languageConfig : "english",
	          text_obj = void 0;
	      switch (language.toLowerCase()) {
	        case "hindi":
	          text_obj = {
	            button_text: "चलो समय यात्रा करे",
	            font: "'Hindi', sans-serif"
	          };
	          break;
	        default:
	          text_obj = {
	            button_text: "Let's time travel",
	            font: "'Helvetica Neue', sans-serif, aerial"
	          };
	          break;
	      }
	      return text_obj;
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      var events = Array.prototype.slice.call(document.getElementsByClassName('proto-single-event')),
	          card = document.getElementsByClassName('proto-timeline-card')[0],
	          min = Infinity,
	          event = void 0;
	      if (!card) {
	        return;
	      }
	      Array.prototype.slice.call(document.getElementsByClassName('active')).forEach(function (e) {
	        e.classList.remove('active');
	      });
	      events.forEach(function (e) {
	        var top = e.getBoundingClientRect().top;
	        if (top > 0 && top < min) {
	          event = e;
	          min = top;
	        }
	      });
	      if (card.scrollHeight - card.clientHeight === card.scrollTop) {
	        event = events[events.length - 1];
	      }
	      event.classList.add('active');
	    }
	  }, {
	    key: 'handleScroll',
	    value: function handleScroll() {
	      var events = Array.prototype.slice.call(document.getElementsByClassName('proto-single-event')),
	          card = document.getElementsByClassName('proto-timeline-card')[0],
	          min = Infinity,
	          event = void 0,
	          curr = void 0;
	      Array.prototype.slice.call(document.getElementsByClassName('active')).forEach(function (e) {
	        e.classList.remove('active');
	      });
	      events.forEach(function (e, i) {
	        var top = e.getBoundingClientRect().top;
	        if (top > 0 && top < min) {
	          event = e;
	          min = top;
	          curr = i + 1;
	        }
	      });
	      if (card.scrollHeight - card.clientHeight === card.scrollTop) {
	        event = events[events.length - 1];
	        curr = events.length;
	      }
	      event.classList.add('active');
	      this.setState({
	        curr: curr
	      });
	    }
	  }, {
	    key: 'matchDomain',
	    value: function matchDomain(domain, url) {
	      var url_domain = this.getDomainFromURL(url).replace(/^(https?:\/\/)?(www\.)?/, ''),
	          domain_has_subdomain = this.subDomain(domain),
	          url_has_subdomain = this.subDomain(url_domain);
	      if (domain_has_subdomain) {
	        return domain === url_domain || domain.indexOf(url_domain) >= 0;
	      }
	      if (url_has_subdomain) {
	        return domain === url_domain || url_domain.indexOf(domain) >= 0;
	      }
	      return domain === url_domain;
	    }
	  }, {
	    key: 'getDomainFromURL',
	    value: function getDomainFromURL(url) {
	      var a = document.createElement('a');
	      a.href = url;
	      return a.hostname;
	    }
	  }, {
	    key: 'subDomain',
	    value: function subDomain(url) {
	      if (!url) {
	        url = "";
	      }
	      // IF THERE, REMOVE WHITE SPACE FROM BOTH ENDS
	      url = url.replace(new RegExp(/^\s+/), ""); // START
	      url = url.replace(new RegExp(/\s+$/), ""); // END

	      // IF FOUND, CONVERT BACK SLASHES TO FORWARD SLASHES
	      url = url.replace(new RegExp(/\\/g), "/");

	      // IF THERE, REMOVES 'http://', 'https://' or 'ftp://' FROM THE START
	      url = url.replace(new RegExp(/^http\:\/\/|^https\:\/\/|^ftp\:\/\//i), "");

	      // IF THERE, REMOVES 'www.' FROM THE START OF THE STRING
	      url = url.replace(new RegExp(/^www\./i), "");

	      // REMOVE COMPLETE STRING FROM FIRST FORWARD SLASH ON
	      url = url.replace(new RegExp(/\/(.*)/), "");

	      // REMOVES '.??.??' OR '.???.??' FROM END - e.g. '.CO.UK', '.COM.AU'
	      if (url.match(new RegExp(/\.[a-z]{2,3}\.[a-z]{2}$/i))) {
	        url = url.replace(new RegExp(/\.[a-z]{2,3}\.[a-z]{2}$/i), "");

	        // REMOVES '.??' or '.???' or '.????' FROM END - e.g. '.US', '.COM', '.INFO'
	      } else if (url.match(new RegExp(/\.[a-z]{2,4}$/i))) {
	        url = url.replace(new RegExp(/\.[a-z]{2,4}$/i), "");
	      }

	      // CHECK TO SEE IF THERE IS A DOT '.' LEFT IN THE STRING
	      var subDomain = url.match(new RegExp(/\./g)) ? true : false;

	      return subDomain;
	    }
	  }, {
	    key: 'flipper',
	    value: function flipper() {
	      document.getElementsByClassName('proto-totimelinecard')[0].classList.add('proto-flipped');
	      this.setState({ ready: true });
	    }
	  }, {
	    key: 'renderCol7',
	    value: function renderCol7() {
	      var _this3 = this;

	      if (this.state.fetchingData) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          'Loading'
	        );
	      } else {
	        var dataArr = this.state.dataJSON.data.events.slice();
	        dataArr.sort(function (a, b) {
	          return new Date(a.single_event.timestamp_date) - new Date(b.single_event.timestamp_date);
	        });
	        var data = this.state.dataJSON,
	            topDate = dataArr[0].single_event.timestamp_date,
	            bottomDate = dataArr[dataArr.length - 1].single_event.timestamp_date,
	            topLabel = (0, _dateformat2.default)(new Date(topDate), "mmm yyyy"),
	            bottomLabel = (0, _dateformat2.default)(new Date(bottomDate), "mmm yyyy"),
	            percent = 100 * (this.state.curr / data.data.events.length) + "%",
	            genreColor = this.state.optionalConfigJSON.house_colour,
	            genreFontColor = this.state.optionalConfigJSON.font_colour;

	        if (!this.state.dataJSON.mandatory_config.interactive) {
	          genreColor = "rgba(51, 51, 51, 0.75)", genreFontColor = "#fff";
	        }
	        if (this.state.dataJSON.mandatory_config.sponsored) {
	          genreColor = this.state.optionalConfigJSON.reverse_house_colour;
	          genreFontColor = this.state.optionalConfigJSON.reverse_font_colour;
	        }
	        var fav = this.state.dataJSON.mandatory_config.faviconurl,
	            str = this.state.dataJSON.mandatory_config.url,
	            arr = str && str.split("/"),
	            name = undefined,
	            dom = arr && arr[2];
	        if (this.matchDomain(this.state.domain, str)) {
	          fav = undefined;
	        }
	        var series = window.vertical_name || this.state.dataJSON.mandatory_config.series,
	            genre = this.state.dataJSON.mandatory_config.genre,
	            padding = "1px 1px 1px 5px";
	        if (!genre && series) {
	          padding = "2.5px 5px";
	        }
	        if (!series && !genre) {
	          padding = '0px';
	        }
	        if (genre && !series) {
	          padding = "1px";
	        }
	        return _react2.default.createElement(
	          'div',
	          { id: 'protograph_div', className: 'proto-totimelinecard proto-parent-card-desktop' },
	          _react2.default.createElement(
	            'div',
	            { className: 'proto-first-view proto-view' },
	            _react2.default.createElement(
	              'div',
	              { className: 'proto-col-3 proto-view-in-desktop' },
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-card-tags' },
	                fav ? _react2.default.createElement(
	                  'div',
	                  { className: 'proto-publisher-icon', style: { backgroundColor: this.state.dataJSON.mandatory_config.iconbgcolor || 'white' } },
	                  _react2.default.createElement('img', { className: 'proto-favicon', src: fav })
	                ) : null,
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-series-name', style: { padding: padding } },
	                  series,
	                  genre ? _react2.default.createElement(
	                    'div',
	                    { className: 'proto-genre', style: { backgroundColor: genreColor, color: genreFontColor, marginLeft: series ? '3px' : '0px' } },
	                    genre,
	                    ' '
	                  ) : null
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-sub-genre-dark', style: { fontStyle: this.state.dataJSON.mandatory_config.sponsored ? 'italic' : 'normal', textDecoration: this.state.dataJSON.mandatory_config.sponsored ? 'underline' : 'none' } },
	                  this.state.dataJSON.mandatory_config.sponsored ? 'Sponsored' : this.state.dataJSON.mandatory_config.subgenre
	                )
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-cover-content' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-title' },
	                  data.mandatory_config.timeline_title
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-description' },
	                  data.mandatory_config.timeline_description
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { onClick: function onClick() {
	                      _this3.flipper();
	                    }, className: 'proto-call-to-action-button' },
	                  this.state.languageTexts.button_text
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'proto-col-4' },
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-cover-image' },
	                _react2.default.createElement('img', { className: 'proto-image', src: data.mandatory_config.timeline_image })
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'proto-second-view proto-view' },
	            _react2.default.createElement(
	              'div',
	              { className: 'proto-col-3 proto-view-in-desktop' },
	              _react2.default.createElement('div', { className: 'proto-tag-area' }),
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-cover-content' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-title' },
	                  data.mandatory_config.timeline_title
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-description' },
	                  data.mandatory_config.timeline_description
	                )
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'proto-col-4', onScroll: function onScroll() {
	                  return _this3.handleScroll();
	                } },
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-progress-line', id: 'proto_progress_desktop' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-progress-start-lable' },
	                  topLabel
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-progress-container' },
	                  _react2.default.createElement('div', { className: 'proto-progress-after', style: { height: percent } }),
	                  _react2.default.createElement('div', { className: 'proto-progress' })
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-progress-end-lable' },
	                  bottomLabel
	                )
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-main-content' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-timeline-card' },
	                  dataArr.map(function (d, i) {
	                    var date = (0, _dateformat2.default)(new Date(d.single_event.timestamp_date), "mmm dd, yyyy");
	                    return _react2.default.createElement(
	                      'div',
	                      { key: i, className: 'proto-single-event' },
	                      _react2.default.createElement(
	                        'div',
	                        { className: 'proto-timeline-time' },
	                        date
	                      ),
	                      _react2.default.createElement(
	                        'div',
	                        { className: 'proto-quiz-answer' },
	                        d.single_event.header
	                      ),
	                      d.single_event.photo && _react2.default.createElement(
	                        'div',
	                        { className: 'proto-quiz-answer-image' },
	                        _react2.default.createElement('img', { src: d.single_event.photo, className: 'proto-image' })
	                      ),
	                      _react2.default.createElement(
	                        'p',
	                        null,
	                        d.single_event.message
	                      )
	                    );
	                  })
	                )
	              )
	            )
	          )
	        );
	      }
	    }
	  }, {
	    key: 'renderCol4',
	    value: function renderCol4() {
	      var _this4 = this;

	      if (this.state.fetchingData) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          'Loading'
	        );
	      } else {
	        var dataArr = this.state.dataJSON.data.events.slice();
	        dataArr.sort(function (a, b) {
	          return new Date(a.single_event.timestamp_date) - new Date(b.single_event.timestamp_date);
	        });
	        var data = this.state.dataJSON,
	            topDate = dataArr[0].single_event.timestamp_date,
	            bottomDate = dataArr[dataArr.length - 1].single_event.timestamp_date,
	            topLabel = (0, _dateformat2.default)(new Date(topDate), "mmm yyyy"),
	            bottomLabel = (0, _dateformat2.default)(new Date(bottomDate), "mmm yyyy"),
	            percent = 100 * (this.state.curr / data.data.events.length) + "%",
	            genreColor = this.state.optionalConfigJSON.house_colour,
	            genreFontColor = this.state.optionalConfigJSON.font_colour;

	        if (!this.state.dataJSON.mandatory_config.interactive) {
	          genreColor = "rgba(51, 51, 51, 0.75)", genreFontColor = "#fff";
	        }
	        if (this.state.dataJSON.mandatory_config.sponsored) {
	          genreColor = this.state.optionalConfigJSON.reverse_house_colour;
	          genreFontColor = this.state.optionalConfigJSON.reverse_font_colour;
	        }
	        var fav = this.state.dataJSON.mandatory_config.faviconurl,
	            str = this.state.dataJSON.mandatory_config.url,
	            arr = str && str.split("/"),
	            name = undefined,
	            dom = arr && arr[2];
	        if (this.matchDomain(this.state.domain, str)) {
	          fav = undefined;
	        }
	        var series = window.vertical_name || this.state.dataJSON.mandatory_config.series,
	            genre = this.state.dataJSON.mandatory_config.genre,
	            padding = "1px 1px 1px 5px";
	        if (!genre && series) {
	          padding = "2.5px 5px";
	        }
	        if (!series && !genre) {
	          padding = '0px';
	        }
	        if (genre && !series) {
	          padding = "1px";
	        }
	        return _react2.default.createElement(
	          'div',
	          { id: 'protograph_div', className: 'proto-totimelinecard proto-parent-card-mobile' },
	          _react2.default.createElement(
	            'div',
	            { className: 'proto-first-view proto-view' },
	            _react2.default.createElement(
	              'div',
	              { className: 'proto-col-4' },
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-cover-image' },
	                _react2.default.createElement('img', { style: { height: "100%", width: "100%" }, src: data.mandatory_config.timeline_image }),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-card-tags proto-card-tags-mobile' },
	                  fav ? _react2.default.createElement(
	                    'div',
	                    { className: 'proto-publisher-icon', style: { backgroundColor: this.state.dataJSON.mandatory_config.iconbgcolor || 'white' } },
	                    _react2.default.createElement('img', { className: 'proto-favicon', src: fav })
	                  ) : null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'proto-series-name', style: { padding: padding } },
	                    series,
	                    genre ? _react2.default.createElement(
	                      'div',
	                      { className: 'proto-genre', style: { backgroundColor: genreColor, color: genreFontColor, marginLeft: series ? '3px' : '0px' } },
	                      genre,
	                      ' '
	                    ) : null
	                  ),
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'proto-sub-genre-light', style: { fontStyle: this.state.dataJSON.mandatory_config.sponsored ? 'italic' : 'normal', textDecoration: this.state.dataJSON.mandatory_config.sponsored ? 'underline' : 'none' } },
	                    this.state.dataJSON.mandatory_config.sponsored ? 'Sponsored' : this.state.dataJSON.mandatory_config.subgenre
	                  )
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-black-overlay' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'proto-cover-content' },
	                    _react2.default.createElement(
	                      'div',
	                      { className: 'proto-title proto-font-white' },
	                      data.mandatory_config.timeline_title
	                    ),
	                    _react2.default.createElement(
	                      'div',
	                      { className: 'proto-description proto-font-white' },
	                      data.mandatory_config.timeline_description
	                    ),
	                    _react2.default.createElement(
	                      'div',
	                      { onClick: function onClick() {
	                          _this4.flipper();
	                        }, className: 'proto-call-to-action-button' },
	                      'Let\'s time travel'
	                    )
	                  )
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'proto-second-view proto-view' },
	            _react2.default.createElement(
	              'div',
	              { className: 'proto-col-4', onScroll: function onScroll() {
	                  return _this4.handleScroll();
	                } },
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-progress-line', id: 'proto_progress_mobile' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-progress-start-lable' },
	                  topLabel
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-progress-container' },
	                  _react2.default.createElement('div', { className: 'proto-progress-after', style: { height: percent } }),
	                  _react2.default.createElement('div', { className: 'proto-progress' })
	                ),
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-progress-end-lable' },
	                  bottomLabel
	                )
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'proto-main-content' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'proto-timeline-card' },
	                  dataArr.map(function (d, i) {
	                    var date = (0, _dateformat2.default)(new Date(d.single_event.timestamp_date), "mmm dd, yyyy");
	                    return _react2.default.createElement(
	                      'div',
	                      { key: i, className: 'proto-single-event' },
	                      _react2.default.createElement(
	                        'div',
	                        { className: 'proto-timeline-time' },
	                        date
	                      ),
	                      _react2.default.createElement(
	                        'div',
	                        { className: 'proto-quiz-answer' },
	                        d.single_event.header
	                      ),
	                      d.single_event.photo && _react2.default.createElement(
	                        'div',
	                        { className: 'proto-quiz-answer-image' },
	                        _react2.default.createElement('img', { src: d.single_event.photo, className: 'proto-image' })
	                      ),
	                      _react2.default.createElement(
	                        'p',
	                        null,
	                        d.single_event.message
	                      )
	                    );
	                  })
	                )
	              )
	            )
	          )
	        );
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      switch (this.props.mode) {
	        case 'col7':
	          return this.renderCol7();
	          break;
	        case 'col4':
	          return this.renderCol4();
	          break;
	      }
	    }
	  }]);

	  return TimelineCard;
	}(_react2.default.Component);

	exports.default = TimelineCard;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

	module.exports = axios;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*
	 * Date Format 1.2.3
	 * (c) 2007-2009 Steven Levithan <stevenlevithan.com>
	 * MIT license
	 *
	 * Includes enhancements by Scott Trenda <scott.trenda.net>
	 * and Kris Kowal <cixar.com/~kris.kowal/>
	 *
	 * Accepts a date, a mask, or a date and a mask.
	 * Returns a formatted version of the given date.
	 * The date defaults to the current date/time.
	 * The mask defaults to dateFormat.masks.default.
	 */

	(function(global) {
	  'use strict';

	  var dateFormat = (function() {
	      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZWN]|"[^"]*"|'[^']*'/g;
	      var timezone = /\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g;
	      var timezoneClip = /[^-+\dA-Z]/g;
	  
	      // Regexes and supporting functions are cached through closure
	      return function (date, mask, utc, gmt) {
	  
	        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)
	        if (arguments.length === 1 && kindOf(date) === 'string' && !/\d/.test(date)) {
	          mask = date;
	          date = undefined;
	        }
	  
	        date = date || new Date;
	  
	        if(!(date instanceof Date)) {
	          date = new Date(date);
	        }
	  
	        if (isNaN(date)) {
	          throw TypeError('Invalid date');
	        }
	  
	        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);
	  
	        // Allow setting the utc/gmt argument via the mask
	        var maskSlice = mask.slice(0, 4);
	        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {
	          mask = mask.slice(4);
	          utc = true;
	          if (maskSlice === 'GMT:') {
	            gmt = true;
	          }
	        }
	  
	        var _ = utc ? 'getUTC' : 'get';
	        var d = date[_ + 'Date']();
	        var D = date[_ + 'Day']();
	        var m = date[_ + 'Month']();
	        var y = date[_ + 'FullYear']();
	        var H = date[_ + 'Hours']();
	        var M = date[_ + 'Minutes']();
	        var s = date[_ + 'Seconds']();
	        var L = date[_ + 'Milliseconds']();
	        var o = utc ? 0 : date.getTimezoneOffset();
	        var W = getWeek(date);
	        var N = getDayOfWeek(date);
	        var flags = {
	          d:    d,
	          dd:   pad(d),
	          ddd:  dateFormat.i18n.dayNames[D],
	          dddd: dateFormat.i18n.dayNames[D + 7],
	          m:    m + 1,
	          mm:   pad(m + 1),
	          mmm:  dateFormat.i18n.monthNames[m],
	          mmmm: dateFormat.i18n.monthNames[m + 12],
	          yy:   String(y).slice(2),
	          yyyy: y,
	          h:    H % 12 || 12,
	          hh:   pad(H % 12 || 12),
	          H:    H,
	          HH:   pad(H),
	          M:    M,
	          MM:   pad(M),
	          s:    s,
	          ss:   pad(s),
	          l:    pad(L, 3),
	          L:    pad(Math.round(L / 10)),
	          t:    H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],
	          tt:   H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],
	          T:    H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],
	          TT:   H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],
	          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),
	          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),
	          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],
	          W:    W,
	          N:    N
	        };
	  
	        return mask.replace(token, function (match) {
	          if (match in flags) {
	            return flags[match];
	          }
	          return match.slice(1, match.length - 1);
	        });
	      };
	    })();

	  dateFormat.masks = {
	    'default':               'ddd mmm dd yyyy HH:MM:ss',
	    'shortDate':             'm/d/yy',
	    'mediumDate':            'mmm d, yyyy',
	    'longDate':              'mmmm d, yyyy',
	    'fullDate':              'dddd, mmmm d, yyyy',
	    'shortTime':             'h:MM TT',
	    'mediumTime':            'h:MM:ss TT',
	    'longTime':              'h:MM:ss TT Z',
	    'isoDate':               'yyyy-mm-dd',
	    'isoTime':               'HH:MM:ss',
	    'isoDateTime':           'yyyy-mm-dd\'T\'HH:MM:sso',
	    'isoUtcDateTime':        'UTC:yyyy-mm-dd\'T\'HH:MM:ss\'Z\'',
	    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'
	  };

	  // Internationalization strings
	  dateFormat.i18n = {
	    dayNames: [
	      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',
	      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'
	    ],
	    monthNames: [
	      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',
	      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'
	    ],
	    timeNames: [
	      'a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM'
	    ]
	  };

	function pad(val, len) {
	  val = String(val);
	  len = len || 2;
	  while (val.length < len) {
	    val = '0' + val;
	  }
	  return val;
	}

	/**
	 * Get the ISO 8601 week number
	 * Based on comments from
	 * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html
	 *
	 * @param  {Object} `date`
	 * @return {Number}
	 */
	function getWeek(date) {
	  // Remove time components of date
	  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());

	  // Change date to Thursday same week
	  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);

	  // Take January 4th as it is always in week 1 (see ISO 8601)
	  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);

	  // Change date to Thursday same week
	  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);

	  // Check if daylight-saving-time-switch occurred and correct for it
	  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();
	  targetThursday.setHours(targetThursday.getHours() - ds);

	  // Number of weeks between target Thursday and first Thursday
	  var weekDiff = (targetThursday - firstThursday) / (86400000*7);
	  return 1 + Math.floor(weekDiff);
	}

	/**
	 * Get ISO-8601 numeric representation of the day of the week
	 * 1 (for Monday) through 7 (for Sunday)
	 * 
	 * @param  {Object} `date`
	 * @return {Number}
	 */
	function getDayOfWeek(date) {
	  var dow = date.getDay();
	  if(dow === 0) {
	    dow = 7;
	  }
	  return dow;
	}

	/**
	 * kind-of shortcut
	 * @param  {*} val
	 * @return {String}
	 */
	function kindOf(val) {
	  if (val === null) {
	    return 'null';
	  }

	  if (val === undefined) {
	    return 'undefined';
	  }

	  if (typeof val !== 'object') {
	    return typeof val;
	  }

	  if (Array.isArray(val)) {
	    return 'array';
	  }

	  return {}.toString.call(val)
	    .slice(8, -1).toLowerCase();
	};



	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return dateFormat;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === 'object') {
	    module.exports = dateFormat;
	  } else {
	    global.dateFormat = dateFormat;
	  }
	})(this);


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(3);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _edit_timeline_card = __webpack_require__(8);

	var _edit_timeline_card2 = _interopRequireDefault(_edit_timeline_card);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	ProtoGraph.Card.toTimeline.prototype.getData = function (data) {
	  return this.containerInstance.exportData();
	};

	ProtoGraph.Card.toTimeline.prototype.renderSEO = function (data) {
	  this.renderMode = 'SEO';
	  return this.containerInstance.renderSEO();
	};

	ProtoGraph.Card.toTimeline.prototype.renderEdit = function (onPublishCallback) {
	  var _this = this;

	  this.mode = 'edit';
	  this.onPublishCallback = onPublishCallback;
	  _reactDom2.default.unmountComponentAtNode(this.options.selector);
	  _reactDom2.default.render(_react2.default.createElement(_edit_timeline_card2.default, {
	    dataURL: this.options.data_url,
	    schemaURL: this.options.schema_url,
	    uiSchemaURL: this.options.ui_schema_url,
	    optionalConfigURL: this.options.configuration_url,
	    optionalConfigSchemaURL: this.options.configuration_schema_url,
	    siteConfigURL: this.options.site_config_url,
	    onPublishCallback: this.onPublishCallback,
	    mode: this.mode,
	    ref: function ref(e) {
	      _this.containerInstance = _this.containerInstance || e;
	    } }), this.options.selector);
	};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(3);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _axios = __webpack_require__(5);

	var _axios2 = _interopRequireDefault(_axios);

	var _Container = __webpack_require__(4);

	var _Container2 = _interopRequireDefault(_Container);

	var _reactJsonschemaForm = __webpack_require__(9);

	var _reactJsonschemaForm2 = _interopRequireDefault(_reactJsonschemaForm);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var EditTimelineCard = function (_React$Component) {
	  _inherits(EditTimelineCard, _React$Component);

	  function EditTimelineCard(props) {
	    _classCallCheck(this, EditTimelineCard);

	    var _this = _possibleConstructorReturn(this, (EditTimelineCard.__proto__ || Object.getPrototypeOf(EditTimelineCard)).call(this, props));

	    _this.state = {
	      step: 1,
	      dataJSON: {
	        data: {},
	        mandatory_config: {}
	      },
	      uiSchemaJSON: {},
	      mode: "col7",
	      publishing: false,
	      schemaJSON: undefined,
	      errorOnFetchingData: undefined,
	      optionalConfigJSON: {},
	      optionalConfigSchemaJSON: undefined,
	      render: true
	    };
	    _this.toggleMode = _this.toggleMode.bind(_this);
	    return _this;
	  }

	  _createClass(EditTimelineCard, [{
	    key: 'exportData',
	    value: function exportData() {
	      var getDataObj = {
	        step: this.state.step,
	        dataJSON: this.state.dataJSON,
	        schemaJSON: this.state.schemaJSON,
	        optionalConfigJSON: this.state.optionalConfigJSON,
	        optionalConfigSchemaJSON: this.state.optionalConfigSchemaJSON
	      };
	      getDataObj["name"] = getDataObj.dataJSON.mandatory_config.timeline_title;
	      return getDataObj;
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      // get sample json data based on type i.e string or object
	      if (typeof this.props.dataURL === "string") {
	        _axios2.default.all([_axios2.default.get(this.props.dataURL), _axios2.default.get(this.props.schemaURL), _axios2.default.get(this.props.optionalConfigURL), _axios2.default.get(this.props.optionalConfigSchemaURL), _axios2.default.get(this.props.uiSchemaURL), _axios2.default.get(this.props.siteConfigURL)]).then(_axios2.default.spread(function (card, schema, opt_config, opt_config_schema, uiSchema, site_configs) {
	          var stateVar = {
	            dataJSON: {
	              data: card.data.data,
	              mandatory_config: card.data.mandatory_config
	            },
	            schemaJSON: schema.data,
	            optionalConfigJSON: opt_config.data,
	            optionalConfigSchemaJSON: opt_config_schema.data,
	            uiSchemaJSON: uiSchema.data,
	            siteConfigs: site_configs.data
	          };

	          stateVar.dataJSON.mandatory_config.language = stateVar.siteConfigs.primary_language.toLowerCase();
	          stateVar.languageTexts = _this2.getLanguageTexts(stateVar.dataJSON.mandatory_config.language);

	          stateVar.optionalConfigJSON.start_button_color = stateVar.siteConfigs.house_colour;
	          stateVar.optionalConfigJSON.start_button_text_color = stateVar.siteConfigs.font_colour;
	          _this2.setState(stateVar);
	        })).catch(function (error) {
	          _this2.setState({
	            errorOnFetchingData: true
	          });
	        });
	      }
	    }
	  }, {
	    key: 'getLanguageTexts',
	    value: function getLanguageTexts(languageConfig) {
	      var language = languageConfig ? languageConfig : "english",
	          text_obj = void 0;
	      switch (language.toLowerCase()) {
	        case "hindi":
	          text_obj = {
	            button_text: "चलो समय यात्रा करे",
	            font: "'Hindi', sans-serif"
	          };
	          break;
	        default:
	          text_obj = {
	            button_text: "Let's time travel",
	            font: "'Helvetica Neue', sans-serif, aerial"
	          };
	          break;
	      }
	      return text_obj;
	    }
	  }, {
	    key: 'onChangeHandler',
	    value: function onChangeHandler(_ref) {
	      var formData = _ref.formData;

	      switch (this.state.step) {
	        case 1:
	          this.setState(function (prevStep, prop) {
	            var dataJSON = prevStep.dataJSON;
	            dataJSON.mandatory_config = formData;
	            dataJSON.data.section = formData.timeline_title;
	            return {
	              dataJSON: dataJSON
	            };
	          });
	          break;
	        case 2:
	          this.setState(function (prevStep, prop) {
	            var dataJSON = prevStep.dataJSON;
	            dataJSON.data.events = formData.events;
	            return {
	              dataJSON: dataJSON
	              // optionalConfigJSON: dataJSON
	            };
	          });
	          break;
	      }
	    }
	  }, {
	    key: 'onSubmitHandler',
	    value: function onSubmitHandler(e) {
	      var _this3 = this;

	      switch (this.state.step) {
	        case 1:
	          this.setState({
	            step: 2
	          });
	          break;
	        case 2:
	          if (typeof this.props.onPublishCallback === "function") {
	            var dataJSON = this.state.dataJSON;
	            dataJSON.data.section = dataJSON.mandatory_config.timeline_title;
	            this.setState({ publishing: true, dataJSON: dataJSON });
	            var publishCallback = this.props.onPublishCallback();
	            publishCallback.then(function (message) {
	              _this3.setState({ publishing: false });
	            });
	          }
	          break;
	      }
	    }
	  }, {
	    key: 'renderSEO',
	    value: function renderSEO() {
	      var data = this.state.dataJSON.data.events;
	      var blockquote_string = data.map(function (d, i) {
	        return '<h3>' + d.single_event.header + '</h3><p>' + d.single_event.message + '</p><p>' + d.single_event.timestamp_date + '</p>';
	      });
	      var seo_blockquote = '<blockquote>' + blockquote_string.join() + '</blockquote>';
	      return seo_blockquote;
	    }
	  }, {
	    key: 'renderSchemaJSON',
	    value: function renderSchemaJSON() {
	      switch (this.state.step) {
	        case 1:
	          return this.state.schemaJSON.properties.mandatory_config;
	          break;
	        case 2:
	          return this.state.schemaJSON.properties.data;
	          break;
	        case 3:
	          return this.state.optionalConfigSchemaJSON;
	      }
	    }
	  }, {
	    key: 'getFormData',
	    value: function getFormData() {
	      switch (this.state.step) {
	        case 1:
	          return this.state.dataJSON.mandatory_config;
	          break;
	        case 2:
	          return this.state.dataJSON.data;
	          break;
	      }
	    }
	  }, {
	    key: 'showLinkText',
	    value: function showLinkText() {
	      switch (this.state.step) {
	        case 1:
	          return '';
	          break;
	        case 2:
	        case 3:
	          return '< Back';
	          break;
	      }
	    }
	  }, {
	    key: 'showButtonText',
	    value: function showButtonText() {
	      switch (this.state.step) {
	        case 1:
	          return 'Next';
	          break;
	        case 2:
	          return 'Publish';
	          break;
	      }
	    }
	  }, {
	    key: 'onPrevHandler',
	    value: function onPrevHandler() {
	      var prev_step = --this.state.step;
	      this.setState({
	        step: prev_step
	      });
	    }
	  }, {
	    key: 'toggleMode',
	    value: function toggleMode(e) {
	      var _this4 = this;

	      var element = e.target.closest('a'),
	          mode = element.getAttribute('data-mode');
	      this.setState(function (prevState, props) {
	        var newMode = void 0;
	        if (mode !== prevState.mode) {
	          newMode = mode;
	        } else {
	          newMode = prevState.mode;
	        }
	        return {
	          mode: newMode,
	          render: false
	        };
	      }, function () {
	        _this4.setState({
	          render: true
	        });
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this5 = this;

	      if (this.state.schemaJSON === undefined) {
	        return _react2.default.createElement(
	          'div',
	          { className: 'protograph-loader-container' },
	          !this.state.errorOnFetchingData ? "Loading" : _react2.default.createElement(
	            'div',
	            { className: 'ui basic message' },
	            _react2.default.createElement(
	              'div',
	              { className: 'header' },
	              'Failed to load resources'
	            ),
	            _react2.default.createElement(
	              'p',
	              null,
	              'Try clearing your browser cache and refresh the page.'
	            )
	          )
	        );
	      } else {
	        var referenceFormData = JSON.parse(JSON.stringify(this.state.dataJSON.mandatory_config));
	        return _react2.default.createElement(
	          'div',
	          { className: 'proto-container' },
	          _react2.default.createElement(
	            'div',
	            { className: 'ui grid form-layout' },
	            _react2.default.createElement(
	              'div',
	              { className: 'row' },
	              _react2.default.createElement(
	                'div',
	                { className: 'four wide column proto-card-form' },
	                _react2.default.createElement(
	                  'div',
	                  null,
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'section-title-text' },
	                    'Fill the form'
	                  ),
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'ui label proto-pull-right' },
	                    'toTimeline'
	                  )
	                ),
	                _react2.default.createElement(
	                  _reactJsonschemaForm2.default,
	                  {
	                    schema: this.renderSchemaJSON(),
	                    onSubmit: function onSubmit(e) {
	                      return _this5.onSubmitHandler(e);
	                    },
	                    onChange: function onChange(e) {
	                      return _this5.onChangeHandler(e);
	                    },
	                    formData: this.getFormData(),
	                    referenceFormData: referenceFormData,
	                    uiSchema: this.state.uiSchemaJSON.data,
	                    transformErrors: this.transformErrors },
	                  _react2.default.createElement(
	                    'a',
	                    { id: 'protograph_prev_link', onClick: function onClick(e) {
	                        return _this5.onPrevHandler(e);
	                      } },
	                    this.showLinkText(),
	                    ' '
	                  ),
	                  _react2.default.createElement(
	                    'button',
	                    {
	                      type: 'submit',
	                      className: (this.state.publishing ? 'ui primary loading disabled button' : '') + ' default-button protograph-primary-button'
	                    },
	                    this.showButtonText()
	                  )
	                )
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'twelve wide column proto-card-preview proto-share-card-div' },
	                _react2.default.createElement(
	                  'div',
	                  { className: 'protograph-menu-container' },
	                  _react2.default.createElement(
	                    'div',
	                    { className: 'ui compact menu' },
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'item ' + (this.state.mode === 'col7' ? 'active' : ''),
	                        'data-mode': 'col7',
	                        onClick: this.toggleMode
	                      },
	                      '7col'
	                    ),
	                    _react2.default.createElement(
	                      'a',
	                      { className: 'item ' + (this.state.mode === 'col4' ? 'active' : ''),
	                        'data-mode': 'col4',
	                        onClick: this.toggleMode
	                      },
	                      '4col'
	                    )
	                  )
	                ),
	                this.state.render && _react2.default.createElement(_Container2.default, {
	                  mode: this.state.mode,
	                  dataJSON: this.state.dataJSON,
	                  optionalConfigJSON: this.state.optionalConfigJSON,
	                  languageTexts: this.state.languageTexts,
	                  siteConfigs: this.state.siteConfigs
	                })
	              )
	            )
	          )
	        );
	      }
	    }
	  }]);

	  return EditTimelineCard;
	}(_react2.default.Component);

	exports.default = EditTimelineCard;

/***/ }),
/* 9 */
/***/ (function(module, exports) {

	module.exports = JSONSchemaForm;

/***/ })
/******/ ]);